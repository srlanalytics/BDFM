% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/BDFM.R
\name{CppBDFM}
\alias{CppBDFM}
\title{MCMC Routine for Bayesian Dynamic Factor Models}
\usage{
CppBDFM(B, Bp, lam_B, q, nu_q, H, Hp, lam_H, R, nu_r, Y, reps, burn, Loud)
}
\arguments{
\item{B}{initial guess for B in transition equation}

\item{Bp}{prior for B}

\item{lam_B}{prior tightness for B (additive)}

\item{q}{initial guess for q in the transition equation}

\item{nu_q}{prior "degrees of freedom" for inverse-Whishart prior for q (additive, prior scale is fixed so that increasing nu_q shrinks the variance towards zero)}

\item{H}{initial guess for H in the trasition equation}

\item{Hp}{prior for H}

\item{lam_H}{prior tightness for H (additive)}

\item{R}{initial guess for diagonal elements of R in the transition equation, entered as a vector}

\item{nu_r}{prior deg. of freedom for elements of R, entered as a vector (additive, prior scale is fixed so that increasing nu_r[j] shrinks the variance of shocks to series j towards zero)}

\item{Y}{Input data. Data must be scaled and centered prior to estimation if desired.}

\item{reps}{number of repetitions for MCMC sampling}

\item{burn}{number of iterations to burn in MCMC sampling}

\item{Loud}{print status of function during evaluation.}
}
\description{
\code{CppBDFM} is the core C++ function for estimating a linear-Gaussian Bayesain dynamic factor model by MCMC methods using Durbin and Koopman's disturbance smoother. This function may be called directly by advanced users. The only dependencies are the  Armadillo (\url{http://arma.sourceforge.net/}) linear algebra library for C++ and the packages needed for interfacing with R (\code{\link{Rcpp}} and \code{\link{RcppArmadillo}}).
}
